<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>

<project name="Inflection" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<description>Inflection</description>

	<taskdef resource="net/sf/antcontrib/antlib.xml"/>
	
	<property name="version" value="1.0"/>
	<property name="ivy.cache" location="${user.home}/.ivy2"/>
	<property name="lib" location="${basedir}/lib"/>
	
	<property name="src" location="${basedir}/src"/>
	<property name="src.main.java" location="${src}/main/java"/>
	<property name="src.main.resources" location="${src}/main/resources"/>
	<property name="src.test.java" location="${src}/test/java"/>
	<property name="src.test.resources" location="${src}/test/resources"/>

	<property name="target" location="${basedir}/target"/>
	<property name="target.main" location="${target}/main/classes"/>
	<property name="target.test" location="${target}/test/classes"/>
	<property name="target.reports" location="${target}/reports"/>
	<property name="target.grammar" location="${target}/grammar"/>
	<property name="target.views" location="${target}/views"/>
	
	<property name="inflection.jar" value="${target}/inflection-${version}.jar"/>
	<property name="inflection-release.tar" value="${target}/inflection-${version}-release.tar"/>
	<property name="inflection-release.tar.gz" value="${inflection-release.tar}.gz"/>
	<property name="inflection-test.jar" value="${target}/inflection-test.jar"/>
	
	<!-- VARIABLE (OVERRIDABLE) PROPERTIES -->
	<property name="test.scope" value="**/*Test.class"/>
	<property name="debug" value="false"/>

	<taskdef resource="net/sf/antcontrib/antlib.xml"/>
	<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" classpath="/opt/local/share/java/apache-ant/lib/ant-junit.jar"/>
	
	<path id="libs.compile.main">
		<fileset dir="${lib}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<path id="libs.compile.views">
		<path refid="libs.compile.main"/>
		<pathelement path="${target.main}"/>
	</path>

	<path id="libs.compile.test">
		<path refid="libs.compile.main"/>
		<pathelement location="${inflection.jar}"/>
	</path>

	<path id="libs.run.test">
		<path refid="libs.compile.test"/>
		<pathelement location="${inflection-test.jar}"/>
	</path>
	
	<target name="init-libs">
		<if>
			<available file="${lib}/INIT-LIBS-FLAG"/>
			<else>
				<mkdir dir="${lib}"/>
				<touch file="${lib}/INIT-LIBS-FLAG"/>
				<ivy:retrieve pattern="${lib}/[artifact].[ext]"/>
				<get src="http://www.antlr.org/download/antlr-4.4-complete.jar" dest="${lib}/antlr-4.4-complete.jar" verbose="true" usetimestamp="true"/>
				<exec executable="deflector">
					<arg line="-jar ${java.home}/lib/rt.jar"/>
					<arg line="-includes java\..* javax\..* org\.ietf\..* org\.omg\..* org\.w3c\..* org\.xml\..*"/>
					<arg line="-excludes javax\.smartcardio\..* org\.omg\.stub\.javax\..* java\.awt\.peer\..*"/>
					<arg line="-output ${lib}"/>
				</exec>
				<exec executable="deflector">
					<arg line="-jar ${lib}/commons-io.jar"/>
					<arg line="-classpath ${lib}/__rt.jar"/>
					<arg line="-includes org\.apache\.commons\.io\..*"/>
					<arg line="-output ${lib}"/>
				</exec>
				<exec executable="deflector">
					<arg line="-jar ${lib}/antlr-4.4-complete.jar"/>
					<arg line="-classpath ${lib}/__rt.jar"/>
					<arg line="-includes org\.antlr\.v4\.runtime\..*"/>
					<arg line="-output ${lib}"/>
				</exec>
				<delete>
					<zipfileset dir="${lib}">
						<include name="hamcrest-core.jar"/>
					</zipfileset>
				</delete>
			</else>
		</if>
	</target>
				
	<target name="init" depends="init-libs">
		<mkdir dir="${target}"/>
		<mkdir dir="${target.main}"/>
		<mkdir dir="${target.test}"/>
		<mkdir dir="${target.reports}"/>
		<mkdir dir="${target.views}"/>
		<if>
			<equals arg1="${debug}" arg2="true"/>
			<then>
				<property name="debug.arg" value="-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y"/>
			</then>
			<else>
				<property name="debug.arg" value=""/>
			</else>
		</if>
	</target>
	
	<target name="generate.grammar" depends="init">
		<java classname="org.antlr.v4.Tool" fork="true">
			<classpath>
				<pathelement location="${lib}/antlr-4.4-complete.jar"/>
			</classpath>
			<arg line="-o ${target.grammar}/ch/liquidmind/inflection/grammar"/>
			<arg line="${src.main.resources}/ch/liquidmind/inflection/grammar/Inflection.g4"/>
		</java>
	</target>

	<target name="compile.grammar" depends="generate.grammar">
		<javac
			includeantruntime="false"
			srcdir="${target.grammar}"
			destdir="${target.main}"
			classpathref="libs.compile.main"
			debug="on"
			debuglevel="lines,vars,source"
			encoding="UTF8"/>
	</target>
	
	<target name="compile.main" depends="compile.grammar">
		<javac
			includeantruntime="false"
			srcdir="${target.grammar}"
			destdir="${target.main}"
			classpathref="libs.compile.main"
			debug="on"
			debuglevel="lines,vars,source"
			encoding="UTF8"/>
		<javac
			includeantruntime="false"
			srcdir="${src.main.java}"
			destdir="${target.main}"
			classpathref="libs.compile.main"
			debug="on"
			debuglevel="lines,vars,source"
			encoding="UTF8"/>
		<java
			classname="ch.liquidmind.inflection.compiler.InflectionCompilerBootstrap"
			fork="true"
			classpathref="libs.compile.views">
			<jvmarg line="${debug.arg}"/>
			<jvmarg value="-ea"/>
			<arg line="${target.main}"/>
			<arg line="${src.main.resources}/ch/liquidmind/inflection/Inflection.inflect"/>
            <arg line="${src.main.resources}/ch/liquidmind/inflection/InflectionOperationBasic.inflect"/>
            <arg line="${src.main.resources}/ch/liquidmind/inflection/InflectionOperationExtended.inflect"/>
			<arg line="${src.main.resources}/ch/liquidmind/inflection/demo/Demo.inflect"/>
            <arg line="${src.main.resources}/ch/liquidmind/inflection/demo/Demo2.inflect"/>
            <!-- Some comment -->
        </java>
	</target>

	<target name="package.main" depends="compile.grammar, compile.main">
		<jar destfile="${inflection.jar}">
			<zipfileset dir="${target.main}">
				<include name="**"/>
			</zipfileset>
			<zipfileset dir="${src.main.resources}">
				<include name="**"/>
			</zipfileset>
		</jar>
	</target>
	
	<target name="compile.test" depends="package.main">
		<javac
			includeantruntime="false"
			srcdir="${src.test.java}"
			destdir="${target.test}"
			classpathref="libs.compile.test"
			debug="on"
			debuglevel="lines,vars,source"
			encoding="UTF8"/>
	</target>

	<target name="package.test" depends="compile.test">
		<jar destfile="${inflection-test.jar}">
			<zipfileset dir="${target.test}">
				<include name="**"/>
			</zipfileset>
			<zipfileset dir="${src.test.resources}">
				<include name="**"/>
			</zipfileset>
		</jar>
	</target>

	<target name="build-release" depends="package.main">
		<tar destfile="${inflection-release.tar}" longfile="gnu">
			<tarfileset dir="${target}" prefix="inflection/bin">
				<include name="inflection-${version}.jar"/>
			</tarfileset>
			<tarfileset dir="${lib}" prefix="inflection/lib">
				<include name="*.jar"/>
			</tarfileset>
			<tarfileset file="${src}/inflection" filemode="755" username="*" group="*" prefix="inflection/bin"/>
		</tar>
		<gzip destfile="${inflection-release.tar.gz}" src="${inflection-release.tar}"/>
	</target>

	<target name="test" depends="package.test">
		<junit fork="true" forkmode="once" showoutput="true" printsummary="on">
			<jvmarg line="${debug.arg}"/>
			<jvmarg value="-ea"/>
			<classpath refid="libs.run.test"/>
			<formatter type="xml"/>
			<batchtest todir="${target.reports}">
				<zipfileset src="${inflection-test.jar}">
					<include name="${test.scope}"/>
					<exclude name="**/Abstract*Test.class"/>
				</zipfileset>
			</batchtest>
		</junit>
		<junitreport todir="${target.reports}">
			<fileset dir="${target.reports}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${target.reports}/html"/>
		</junitreport>
	</target>
	
	<target name="clean">
		<delete dir="${target}"/>
		<delete dir="${lib}"/>
	</target>
	
</project>
